{"version":3,"sources":["images/logo.png","components/Header/Header.js","utilities/fakedb.js","components/cart/Cart.js","components/products/Products.js","components/shop/Shop.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","href","getDb","localStorage","getItem","updateDb","cart","setItem","JSON","stringify","Cart","props","total","quantity","product","price","shipping","toFixed","Products","name","seller","stock","img","star","element","icon","faShoppingCart","readonly","initialRating","fullSymbol","emptySymbol","onClick","updateCart","Shop","useState","products","setProducts","setCart","displayProducts","setDisplayProducts","useEffect","fetch","then","res","json","data","savedCart","exists","parse","getStoredCart","storedCart","length","key","console","log","addedProduct","find","push","handleAddToCart","newCart","id","shopping_cart","newCount","addToDb","type","onChange","event","searchText","target","value","matchedProduct","filter","toLowerCase","includes","placeholder","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.789a55fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0dd9a510.png\";","import React from 'react';\r\nimport logo from '../../images/logo.png'\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='header'>\r\n            <img src={logo} alt=\"logo\" />\r\n            <nav>\r\n                <a href=\"/shop\">Shop</a>\r\n                <a href=\"/orders\">Orders</a>\r\n                <a href=\"/inventory\">Manage Inventory</a>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","// use local storage as your db for now\nconst addToDb = id => {\n  const exists = getDb();\n  let shopping_cart = {};\n  if (!exists) {\n    shopping_cart[id] = 1;\n  }\n  else {\n    shopping_cart = JSON.parse(exists);\n    if (shopping_cart[id]) {\n      const newCount = shopping_cart[id] + 1;\n      shopping_cart[id] = newCount;\n    }\n    else {\n      shopping_cart[id] = 1;\n    }\n  }\n  updateDb(shopping_cart);\n}\n\nconst getDb = () => localStorage.getItem('shopping_cart');\nconst updateDb = cart => {\n  localStorage.setItem('shopping_cart', JSON.stringify(cart));\n}\n\nconst removeFromDb = id => {\n  const exists = getDb();\n  if (!exists) {\n\n  }\n  else {\n    const shopping_cart = JSON.parse(exists);\n    delete shopping_cart[id];\n    updateDb(shopping_cart);\n  }\n}\n\nconst getStoredCart = () => {\n  const exists = getDb();\n  return exists ? JSON.parse(exists) : {};\n}\n\nconst clearTheCart = () => {\n  localStorage.removeItem('shopping_cart');\n}\n\nexport { addToDb, removeFromDb as deleteFromDb, clearTheCart, getStoredCart }\n","import React from 'react';\r\nimport './Cart.css'\r\n\r\nconst Cart = (props) => {\r\n    let total = 0;\r\n    let quantity = 0;\r\n    for(const product of props.cart){\r\n        if(!product.quantity){\r\n            product.quantity = 1;\r\n        }\r\n        total = total + product.price * product.quantity;\r\n        quantity = quantity + product.quantity;\r\n    }\r\n    const shipping = total ? 15: 0;\r\n    /* if(!total){\r\n        shipping = 0;\r\n    } */\r\n    return (\r\n        <div className='cart'>\r\n            <h3>Order Summary</h3>\r\n            <p>Items Ordered: {quantity}</p>\r\n            <p><small>Items: $ {total.toFixed(2)}</small></p>           \r\n            <p><small>Shipping and Handling: $ {shipping}</small></p>           \r\n            <p><small>Total before tax: $ {(total+shipping).toFixed(2)}</small></p>           \r\n            <p><small>Estemated tax: $ {(total/20).toFixed(2)}</small></p>\r\n            <h4>Order Total: $ {(total + shipping + (total/20)).toFixed(2)}</h4>           \r\n            <button>Review your order</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\nimport './Products.css'\r\nimport Rating from 'react-rating';\r\n\r\nconst Products = (props) => {\r\n    const {name,seller,stock,img,price,star} = props.product;\r\n    const element = <FontAwesomeIcon icon={faShoppingCart} />\r\n    return (\r\n        <div>\r\n            <div className='products'>\r\n                        <div>\r\n                            <img src={img} alt=\"\" />\r\n                        </div>\r\n                        <div>\r\n                            <h3 className='product-name'>{name}</h3>\r\n                            <p>by: {seller}</p>\r\n                            <h4>$ {price}</h4>\r\n                            <p><small>only {stock} left in stock - order soon</small></p>\r\n                            <Rating \r\n                            readonly \r\n                            initialRating={star} \r\n                            fullSymbol=\"fas fa-star\" \r\n                            emptySymbol=\"far fa-star\"/>\r\n                            <br /><br />\r\n                            <button onClick={() => props.updateCart(props.product)}>{element}add to cart</button>\r\n                        </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Products;","import React, { useEffect, useState } from 'react';\r\nimport { addToDb, getStoredCart } from '../../utilities/fakedb';\r\nimport Cart from '../cart/Cart';\r\nimport Products from '../products/Products';\r\nimport './Shop.css'\r\n\r\nconst Shop = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [cart, setCart] = useState([]);\r\n    const [displayProducts, setDisplayProducts] = useState([]);\r\n\r\n    useEffect( () => {\r\n        fetch('./products.JSON')\r\n        .then(res => res.json())\r\n        .then(data => {setProducts(data);setDisplayProducts(data)})\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const savedCart = getStoredCart();\r\n        const storedCart = [];\r\n        if(products.length){\r\n            for(const key in savedCart){\r\n                console.log(savedCart[key]);\r\n                const addedProduct = products.find(product => product.key === key);\r\n                if(addedProduct){\r\n                    const quantity = savedCart[key];\r\n                    addedProduct.quantity = quantity;\r\n                    storedCart.push(addedProduct);\r\n                }\r\n                \r\n                \r\n            }\r\n        }\r\n        setCart(storedCart)\r\n    }, [products])\r\n\r\n    const handleAddToCart = (product) => {\r\n        const newCart = [...cart, product];\r\n        setCart(newCart);\r\n        addToDb(product.key)\r\n    }\r\n\r\n    const handleValue = event => {\r\n        const searchText = event.target.value;\r\n        const matchedProduct = products.filter(product => product.name.toLowerCase().includes(searchText.toLowerCase()));\r\n        setDisplayProducts(matchedProduct)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='search-field'>\r\n                <input type=\"text\" \r\n                onChange={handleValue}\r\n                placeholder=\"search your product...\" />\r\n            </div>\r\n            <div className='shop-container'>\r\n                <div></div>\r\n                <div className=\"product-container\">\r\n                    {\r\n                        displayProducts.map(product => <Products product={product} key={product.key} updateCart={handleAddToCart}></Products>)\r\n                    }\r\n                </div>\r\n                <div className=\"cart-container\">\r\n                    <Cart cart={cart}></Cart>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Shop;","import './App.css';\nimport Header from './components/Header/Header';\nimport Shop from './components/shop/Shop';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Shop></Shop>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}